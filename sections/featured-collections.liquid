{%- liquid
  assign collection_count = 0
  assign collection_limit = section.blocks.size | plus: 1

  for collection in section.blocks limit: collection_limit
    assign collection_count = collection_count | plus: 1
  endfor

  if section.settings.full_width
    assign full_width = true
  endif

  if section.settings.title == blank and section.settings.subtitle == blank
    assign no_header = true
  endif

  assign show_view_all = section.settings.show_view_all
  assign button_label = section.settings.button_label
  assign button_link = section.settings.button_link | default: collection.url
  assign button_style = section.settings.button_style
-%}

<div
  id="section-{{ section.id }}"
  class="{% unless section.settings.show_on_desktop %} medium--hide large--hide{% endunless %} {% unless section.settings.show_on_mobile %} small--hide{% endunless %}{% if full_width %}section-full-width{% endif %} {% if no_header %}section-no-title{% endif %} {{ section.settings.section_style }}"
  data-section-id="{{ section.id }}"
  data-section-type="list-collections-template"
>
  <div class="box">
    <div class="{% if full_width %}wrapper-full{% else %}wrapper{% endif %}">
      {%- unless no_header -%}
        <div class="grid">
          <div class="grid__item large--eight-twelfths push--large--two-twelfths">
            <div class="section-header">
              {%- unless section.settings.title == blank -%}
                <h2 class="section-header__title">{{ section.settings.title | escape }}</h2>
              {%- endunless -%}

              {%- unless section.settings.subtitle == blank -%}
                <p class="section-header__subtitle">{{ section.settings.subtitle | escape }}</p>
              {%- endunless -%}
            </div>
          </div>
        </div>
      {%- endunless -%}

      {%- if section.blocks.size > 0 -%}
        <div
          id="FeaturedCollections-{{ section.id }}"
          class="grid {% if full_width %}grid-full{% else %}grid-spacer{% endif %}{% if section.settings.slider_featured_collections and section.blocks.size > 1 %} slick slick-featured-collections{% endif %}"
          id="Collections-{{ section.id }}"
          data-count="{{ section.blocks.size }}"
          data-arrows="{{ section.settings.arrows }}"
          data-dots="{{ section.settings.dots }}"
        >
          {%- liquid
            for block in section.blocks limit: collection_limit
              capture current
                cycle 1, 2, 3, 4, 5, 6
              endcapture

              assign collection = collections[block.settings.collection]
              render "collection-grid-item" with collection as collection, block: block, current: current
            endfor
          -%}
        </div>

        {%- if show_view_all and button_label != blank and button_link != blank -%}
          <div class="view-all-box">
            <a href="{{ button_link }}" class="btn view-all-link {{ button_style }}">
              {{- button_label -}}
            </a>
          </div>

          {% if full_width %}
            <div class="box" style="padding-top: 0;"></div>
          {% endif %}
        {%- endif -%}
      {%- else -%}
        {%- render 'no-blocks' -%}
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.featured_collections.name",
  "class": "featured-collections-section",
  "max_blocks": 9,
  "settings": [
    {
      "type": "checkbox",
      "id": "show_on_desktop",
      "label": "t:sections.featured_collections.settings.show_on_desktop.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_on_mobile",
      "label": "t:sections.featured_collections.settings.show_on_mobile.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.featured_collections.settings.full_width.label",
      "default": false
    },
    {
      "type": "text",
      "id": "title",
      "label": "t:sections.featured_collections.settings.title.label",
      "default": "Collection list"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "t:sections.featured_collections.settings.subtitle.label"
    },
    {
      "type": "select",
      "id": "section_style",
      "label": "t:sections.featured_collections.settings.section_style.label",
      "default": "section-blank",
      "options": [
        {
          "value": "section-blank",
          "label": "t:sections.featured_collections.settings.section_style.options__1.label"
        },
        {
          "value": "section-default",
          "label": "t:sections.featured_collections.settings.section_style.options__2.label"
        },
        {
          "value": "section-border",
          "label": "t:sections.featured_collections.settings.section_style.options__3.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "section_height",
      "label": "t:sections.featured_collections.settings.section_height.label",
      "default": "medium",
      "options": [
        {
          "label": "t:sections.featured_collections.settings.section_height.options__1.label",
          "value": "xsmall"
        },
        {
          "label": "t:sections.featured_collections.settings.section_height.options__2.label",
          "value": "small"
        },
        {
          "label": "t:sections.featured_collections.settings.section_height.options__3.label",
          "value": "medium"
        },
        {
          "label": "t:sections.featured_collections.settings.section_height.options__4.label",
          "value": "large"
        },
        {
          "label": "t:sections.featured_collections.settings.section_height.options__5.label",
          "value": "xlarge"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.featured_collections.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "label": "t:sections.featured_collections.settings.show_view_all.label",
      "default": false
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "t:sections.featured_collections.settings.button_label.label",
      "default": "View all"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.featured_collections.settings.button_link.label",
      "default": "/collections",
      "info": "t:sections.featured_collections.settings.button_link.info"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "t:sections.featured_collections.settings.button_style.label",
      "default": "btn-outline-primary",
      "options": [
        {
          "value": "",
          "label": "t:sections.featured_collections.settings.button_style.options__1.label"
        },
        {
          "value": "btn--primary",
          "label": "t:sections.featured_collections.settings.button_style.options__2.label"
        },
        {
          "value": "btn-outline-primary",
          "label": "t:sections.featured_collections.settings.button_style.options__3.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.featured_collections.settings.header__2.content"
    },
    {
      "type": "checkbox",
      "id": "slider_featured_collections",
      "label": "t:sections.featured_collections.settings.slider_featured_collections.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "arrows",
      "label": "t:sections.featured_collections.settings.arrows.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "dots",
      "label": "t:sections.featured_collections.settings.dots.label",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "t:sections.featured_collections.blocks.collection.name",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "t:sections.featured_collections.blocks.collection.settings.title.label",
          "info": "t:sections.featured_collections.blocks.collection.settings.title.info"
        },
        {
          "id": "collection",
          "type": "collection",
          "label": "t:sections.featured_collections.blocks.collection.settings.collection.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.featured_collections.presets.name",
      "category": "t:sections.featured_collections.presets.category",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}
