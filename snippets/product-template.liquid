<!-- /snippets/product-template.liquid -->
{%- liquid
  assign id = section.id

  assign current_variant = product.selected_or_first_available_variant
  assign featured_media = current_variant.featured_media | default: product.featured_media
  assign stacked = false

  if section.settings.media_layout == "stacked"
    assign stacked = true
  endif

  assign first_media = true

  if product.media.size > 1
    assign carousel = true
  else
    assign carousel = false
  endif

  if emptyState
    assign vendor = 'home_page.onboarding.product_vendor' | t
    assign sku = '12345'
    assign title = 'home_page.onboarding.product_title' | t
    assign compare_at_price = 2999
    assign price = 1999
  else
    assign vendor = product.vendor
    assign sku = current_variant.sku
    assign title = product.title
    assign compare_at_price = current_variant.compare_at_price
    assign price = current_variant.price
  endif

  if compare_at_price > price
    assign on_sale = true
  else
    assign on_sale = false
  endif

  if current_variant.available
    assign sold_out = false
  else
    assign sold_out = true
  endif

  assign enable_zoom = section.settings.enable_zoom
  assign product_image_zoom_size = '1024x1024'
  assign product_image_scale = '2'
  assign product_tabs_position = settings.dbtfy_product_tabs_position
  assign product_description_position = section.settings.dbtfy_product_description_position

  assign has_description = false

  if section.settings.show_product_description and product.description != blank
    assign has_description = true
  endif

  assign is_to_split_description = false

  if has_description and section.settings.enable_split_description and product.description contains "[split_description]"
    assign is_to_split_description = true
  endif

  assign show_info_section = false

  if is_to_split_description
    assign show_info_section = true
  endif

  if has_description and product_description_position == "separate_section"
    assign show_info_section = true
  elsif product_tabs_position == "separate_section"
      assign show_info_section = true
  elsif product_description_position == "separate_section"
      if product_tabs_position != "under_addtocart"
        if product_tabs_position == "under_description" or product_tabs_position == "above_description"
          assign show_info_section = true
        endif
      endif
  endif

  case section.settings.image_size
    when 'small'
      assign product_image_width = 'large--five-twelfths'
      assign product_description_width = 'large--seven-twelfths'
    when 'medium'
      assign product_image_width = 'large--six-twelfths'
      assign product_description_width = 'large--six-twelfths'
    when 'large'
      assign product_image_width = 'large--seven-twelfths'
      assign product_description_width = 'large--five-twelfths'
  endcase

  assign carousel_fade_effect = section.settings.enable_fading_effect

  capture product_collections
    for collection in product.collections
      echo collection.handle

      unless forloop.last
        echo ","
      endunless
    endfor
  endcapture
-%}

<meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
<meta itemprop="image" content="{{ product.featured_media | img_url: 'grande' }}">
<meta itemprop="productID" content="{{ product.id }}">

<div class="product-single" data-product-handle="{{ product.handle }}" data-product-id="{{ product.id }}" data-product-collections="{{ product_collections }}">
  <div class="box">
    <div class="wrapper">
      <div class="grid product-single">
        <!-- left grid item  -->
        <div id="ProductMedia-{{ section.id }}" class="grid__item {{ product_image_width }} text-center">
          {%- if product.media.size > 0 -%}
            <!-- media group (main media + thumbnails) -->
            <div id="ProductMediaGroup-{{ section.id }}" class="product-single__media-group-wrapper" data-product-single-media-group-wrapper>
              <div class="grid grid-small {% if product.media.size > 1 %}grid-spacer {% endif %}product-single__media-group{% unless stacked %} product-single__media-group--single-xr{% endunless %}{% if carousel %} slick{% endif %}"
                   data-product-single-media-group
                   {% if carousel_fade_effect %}data-carousel-fade-effect{% endif %}>

                {%- liquid
                  assign height = 850
                  assign width = 575
                  assign first_3d_model = product.media | where: "media_type", "model" | first

                  comment
                    Display product images
                  endcomment
                -%}

                {%- for media in product.media -%}
                  {%- liquid
                    assign featured = false

                    if media == featured_media
                      assign featured = true
                    endif

                    capture thumbnail_alt
                      if media.media_type == 'video' or media.media_type == 'external_video'
                        echo 'products.product.video_thumbnail_alt' | t: imageAlt: media.alt | escape
                      elsif media.media_type == 'model'
                        echo 'products.product.model_thumbnail_alt' | t: imageAlt: media.alt | escape
                      else
                        echo 'products.product.gallery_thumbnail_alt' | t: imageAlt: media.alt | escape
                      endif
                    endcapture
                  -%}

                  <div class="grid__item product-single__media-flex-wrapper{% if stacked %} product-stacked_media_flex{% endif %}" data-slick-media-label="{{ thumbnail_alt }}" data-product-single-media-flex-wrapper>
                    <div class="product-single__media-flex">
                      {%- liquid
                        render 'media' with media, enable_image_zoom_on_icon_click: enable_image_zoom_on_icon_click, full_screen_image: full_screen_image, stacked: stacked, featured: featured, width: width, height: height, id: id, video_looping: section.settings.enable_video_looping, image_index: forloop.index0

                        comment
                          Display a "View in your space" button (multi) for the first visible media and each individual model.
                          Stacked layout only.
                        endcomment

                        if stacked
                          assign xr_id = false

                          if first_media and first_3d_model
                            assign xr_id = first_3d_model.id
                          elsif media.media_type == 'model'
                            assign xr_id = media.id
                          endif

                          if xr_id
                            render 'xr-button' with model_id: xr_id, multi: true
                          endif

                          assign first_media = false
                        endif
                      -%}
                    </div>
                  </div>
                {%- endfor -%}
              </div>

              {%- liquid
                comment
                  Display a "View in your space" button (single).
                  Stacked/Thumbnails layout (mobile)
                  Thumbnail layout only (desktop)
                endcomment

                if first_3d_model
                  render 'xr-button' with model_id: first_3d_model.id, multi: false
                endif
              -%}

              {%- if product.media.size > 1 -%}
              <div class="product-single__thumbnails grid grid-small {% if stacked %}medium--hide large--hide{% endif %}{% if carousel %} slick{% endif %}{% if product.images.size <= 5 %} slick-disabled{% endif %}" data-product-thumbnails>
                {% for media in product.media %}
                  <div class="grid__item one-fifth product-thumbnail-wrapper" data-product-thumbnail-wrapper>
                    {%- liquid
                      capture thumbnail_alt
                        if media.media_type == 'video' or media.media_type == 'external_video'
                          echo 'products.product.video_thumbnail_alt' | t: imageAlt: media.alt | escape
                        elsif media.media_type == 'model'
                          echo 'products.product.model_thumbnail_alt' | t: imageAlt: media.alt | escape
                        else
                          echo 'products.product.gallery_thumbnail_alt' | t: imageAlt: media.alt | escape
                        endif
                      endcapture

                      assign media_aspect_ratio = media.aspect_ratio | default: media.preview_image.aspect_ratio
                    -%}

                    <a class="product--wrapper product-single__thumbnail media-wrapper image-link {% if media == featured_media %} active-thumb{% endif %}"
                      data-product-thumbnail
                      data-media-id="{{ media.id }}"
                      style="padding-top: {{ 1 | divided_by: media_aspect_ratio | times: 100 }}%;">
                      <img class="product--image product-single__thumb media lazyload"
                      {%- render 'lazysizes', img: media, img_type: 'responsive' -%}
                      alt="{{ thumbnail_alt }}"
                      data-media-id="{{ media.id }}">

                      {%- if media.media_type == 'video' or media.media_type == 'external_video' or media.media_type == 'model' -%}
                        <div data-media-type="{{ media.media_type }}" class="product-single__thumbnail-badge">
                          {% render 'svg-definitions' with media.media_type %}
                        </div>
                      {%- endif -%}
                    </a>
                  </div>
                {% endfor %}
              </div>
              {%- endif -%}
            </div>
          {%- elsif product.images.size < 1 or emptyState -%}
            {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
          {%- endif -%}
          <hr class="hr-divider hr-rev product-single-divider medium--hide large--hide">
        </div>

        <!-- right grid item -->
        <div id="ProductMeta-{{ section.id }}" class="grid__item product-single__meta--wrapper {{ product_description_width }}{% if emptyState %} large--sticky medium--sticky sticky-check-header{% endif %} {% if sold_out %}variant-soldout{% endif %}">
          <div class="product-single__meta">
            {%- liquid
              assign showProductProperties = false

              if section.settings.show_product_vendor and product.vendor != blank
                assign showProductProperties = true
              elsif section.settings.show_product_type and product.type != blank
                assign showProductProperties = true
              elsif section.settings.show_product_sku and sku != blank
                assign showProductProperties = true
              endif
            -%}

            {%- if showProductProperties -%}
            <div class="product-header-wrapper spacer-bottom">
              <ul class="inline-list">
                {%- if section.settings.show_product_vendor and product.vendor != blank -%}
                <li>
                  <a href="{{ product.vendor | url_for_vendor }}" class="product-single__vendor text-small">
                    <span class="{{ settings.icon }} icon-middle">store</span>
                    <span itemprop="brand">{{ product.vendor }}</span>
                  </a>
                </li>
                {%- endif -%}

                {%- if section.settings.show_product_type and product.type != blank -%}
                <li>
                  <a href="{{ product.type | url_for_type }}" class="product-single__vendor text-small">
                    <span class="{{ settings.icon }} icon-middle">folder</span>
                    {{ product.type }}
                  </a>
                </li>
                {%- endif -%}

                {%- if section.settings.show_product_sku -%}
                <li>
                  <span class="product-single__sku text-small{% if sku == blank %} hide{% endif %}">
                    <span class="{{ settings.icon }} icon-middle">settings</span>
                    <span>SKU: </span>
                    <span class="variant-sku" itemprop="sku">{{ sku }}</span>
                  </span>
                </li>
                {%- endif -%}
              </ul>
            </div>
            {%- endif -%}

            <div class="grid grid-xsmall flex-nowrap product-title-container">
              <div class="grid__item flex-fill">
                {%- if section.settings.featured_product -%}
                  {% unless emptyState %}
                    <a href="{{ product.url }}" class="product-single__full-details">
                  {% endunless %}
                {%- endif -%}

                  <h1 class="product-single__title{% if section.settings.product_title_large %} page-title{% endif %}"
                      itemprop="name">
                    {{ title }}
                  </h1>

                {%- if section.settings.featured_product -%}
                  {% unless emptyState %}
                    </a>
                  {% endunless %}
                {%- endif -%}
              </div>

            </div>

            {%- unless emptyState -%}
              {%- render "review-badge" with product as product, position: "product_page", class: "spacer-bottom" -%}
              <div class="dbtfy-product-sales-countdown-box main-product-block" {% if product.selected_variant.available == false %}{% endif %}></div>
            {%- endunless -%}

            <div itemprop="offers" itemscope itemtype="http://schema.org/Offer" class="product-single__meta-info">
              {%- liquid
                assign product_description = product.description | strip_html | replace: "[split_description]", "" | newline_to_br | split: '<br />'
                assign filtered_description = ''

                for line in product_description
                  if line != blank
                    assign filtered_description = filtered_description | append: line
                  endif
                endfor
              -%}

              <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
              <meta itemprop="description" content="{{ filtered_description }}">
              <meta itemprop="priceCurrency" content="{{ cart.currency.iso_code }}">
              <link itemprop="availability" href="http://schema.org/{%- if product.available -%}InStock{%- else -%}OutOfStock{%- endif -%}">

              {%- if current_variant.inventory_quantity > 0 and current_variant.inventory_management == "shopify" -%}
              <meta itemprop="inventoryLevel" content="{{ current_variant.inventory_quantity }}">
              {%- endif -%}

              <div class="price-container text-money text-large spacer-bottom flex align-center{% if current_variant.unit_price_measurement %} price-container--unit-available{% endif %}" data-price-container>
                <span id="ProductPrice"
                  class="product-single__price{% if on_sale %} on-sale text-sale{% endif %}"
                  itemprop="price"
                  content="{{ price | divided_by: 100.00 }}"
                  {% if on_sale %}
                  aria-label="{{ 'products.general.sale_price' | t }}"
                  {% else %}
                  aria-label="{{ 'products.general.regular_price' | t }}"
                  {% endif %}>
                  <span class="money">{{ price | money }}</span>
                </span>

                <!--Added By Henry 05/31/2022-->
                <div class="added_by_henry">
                  <span id="ComparePrice"
                  class="product-single__price--compare-at text-muted text-strike{% unless on_sale %} hide{% endunless %}"
                  aria-label="{{ 'products.general.regular_price' | t }}">
                  <span class="money">{{ compare_at_price | money }}</span>
                  </span>

                  <span class="badge grid-product__badge" style="margin-left:.5rem; margin-top: .25rem;">
                    <span class="material-icons-outlined">local_offer</span>
                    <span class="product-badge-text">
                      {%- liquid 
                         assign cur_price = price | divided_by: 100.00
                         assign comp_price = compare_at_price | divided_by: 100.00
                         assign divide_price = cur_price | divided_by: comp_price
                         assign save_price1 = divide_price | times: 100
                         assign save_price2 = 100 | minus: save_price1

                      -%}
                      SAVE <span id="getme" class="product-badge-discount">{{ save_price2 | round }}%</span>
                      
                    </span>
                  </span>
                </div>
  
                {% comment %}
                {%- render "dbtfy-discount-saved" with product as product -%}
                {% endcomment %}

                <div class="product-single__unit">
                  {%- capture unit_price_separator -%}
                    <span aria-hidden="true">/</span><span class="visually-hidden">&nbsp;{{ 'general.accessibility.unit_price_separator' | t }}&nbsp;</span>
                  {%- endcapture -%}

                  {%- capture unit_price_base_unit -%}
                    <span data-unit-price-base-unit>
                      {%- liquid
                        if current_variant.unit_price_measurement
                          if current_variant.unit_price_measurement.reference_value != 1
                            echo current_variant.unit_price_measurement.reference_value
                          endif

                          echo current_variant.unit_price_measurement.reference_unit
                        endif
                      -%}
                    </span>
                  {%- endcapture -%}
                  
                  <span class="product-unit-price">
                    <span class="visually-hidden">{{ 'products.general.unit_price' | t }}</span>
                    <span data-unit-price><span class="money"></span>{{ current_variant.unit_price | money }}</span>{{- unit_price_separator -}}{{- unit_price_base_unit -}}
                  </span>
                </div>
              </div>

              <!-- {%- if settings.dbtfy_quick_compare or settings.dbtfy_wish_list -%}
                <div class="product-wl-qc-buttons-wrapper flex spacer-bottom">
                  {%- render "dbtfy-wish-list", type: "button", product: product -%}
                  {%- render "dbtfy-quick-compare", product: product -%}
                </div>
              {%- endif -%} -->

              {%- if section.settings.show_product_description -%}
                {%- if is_to_split_description -%}
                  <div id="productDescription" class="product-single__description rte spacer-top {{ section.settings.text_alignment }} {{ section.settings.text_alignment_mobile }}">
                    {%- liquid
                      assign first_part = product.description | split: '<p>[split_description]</p>' | first

                      unless first_part contains '[split_description]'
                        echo first_part
                      else
                        echo product.description | split: '[split_description]' | first
                      endunless
                    -%}
                  </div>
                {%- endif -%}
              {%- endif -%}

              {%- if emptyState -%}
                <div class="product-single__add-to-cart">
                  <button type="button" class="btn btn--primary btn--add-to-cart full">
                    <span class="btn__text">
                      <span class="{{ settings.icon }} button-cart-icon">{{ settings.icon_cart }}</span>
                      <span class="btn__add-to-cart-text">
                        {{ 'products.product.add_to_cart' | t }}
                      </span>
                    </span>
                  </button>
                </div>
              {%- else -%}
                {%- liquid
                  assign form_classes = "product-single__form"

                  if product.has_only_default_variant
                    assign form_classes = form_classes | append: " product-single__form--no-variants"
                  endif

                  assign form_id = "AddToCartForm--" | append: section.id

                  render "dbtfy-color-swatches" with product as product, id: id
                -%}

                <div class="dbtfy-size-chart-box"></div>
                
                <!--Added by Henry 05/31/2022-->
                <div>
                  <ul class="pbp-points inline-list text-left" style="display: grid;"><li class="pbp-point" data-visibility-type="all" data-visibility-product="" data-visibility-collection="" data-visibility-product-types="" data-visibility-product-tags=""><span class="material-icons-outlined icon-width text-secondary">check_circle</span><span> Betal senere med Klarna</span>
                  </li><li class="pbp-point" data-visibility-type="all" data-visibility-product="" data-visibility-collection="" data-visibility-product-types="" data-visibility-product-tags=""><span class="material-icons-outlined icon-width text-secondary">check_circle</span><span> Vegansk og grusomhetsfri</span>
                  </li><li class="pbp-point" data-visibility-type="all" data-visibility-product="" data-visibility-collection="" data-visibility-product-types="" data-visibility-product-tags=""><span class="material-icons-outlined icon-width text-secondary">check_circle</span><span> Miljøvennlig</span>
                  </li></ul>
                </div>

                {%- form 'product', product, class: form_classes, id: form_id, data-product-form: '' -%}
                  {%- unless product.has_only_default_variant -%}
                    <div class="grid grid-small">
                    {%- for option in product.options_with_values -%}
                      {%- liquid
                        assign is_color_option = false

                        if content_for_header contains 'debutify' and product.available and product.variants.size >= 1 and settings.dbtfy_color_swatches
                          assign swatch_list = settings.dbtfy_color_swatches_color | split: ","

                          for swatch in swatch_list
                            assign swatch_option_name = swatch | handleize
                            assign option_name = option.name | handleize

                            if option_name == swatch_option_name
                              assign is_color_option = true
                            endif
                          endfor
                        endif

                        assign first_option_value = current_variant.options[forloop.index0] | escape
                      -%}

                      <div class="grid__item radio-wrapper product-form__item"{%- if is_color_option -%} hidden{%- endif -%}>
                        <label class="single-option-radio__label"
                               for="ProductSelect-option-{{ forloop.index0 }}"
                               data-option-name="{{ option.name | escape }}">
                          {{ option.name | escape }}: <span class="variant-label-option-value">{{ first_option_value | escape }}</span>
                        </label>

                        {%- if section.settings.product_selector == 'radio' -%}
                          <fieldset class="single-option-radio inline-list"
                            id="ProductSelect-option-{{ forloop.index0 }}">
                            {%- assign option_index = forloop.index -%}

                            {%- for value in option.values -%}
                              {%- liquid
                                assign variant_label_state = true

                                if product.options.size == 1
                                  unless product.variants[forloop.index0].available
                                    assign variant_label_state = false
                                  endunless
                                endif
                              -%}

                              <input type="radio"
                                {% if option.selected_value == value -%} checked="checked"{% endif %}
                                value="{{ value | escape }}"
                                data-index="option{{ option_index }}"
                                name="option{{ option.position }}"
                                class="single-option-selector__radio js-single-option-selector"
                                id="ProductSelect-option-{{ section.id }}-{{ option.name | handleize }}-{{ value | escape }}">

                              <label for="ProductSelect-option-{{ section.id }}-{{ option.name | handleize }}-{{ value | escape }}"{% unless variant_label_state %} class="text-strike"{% endunless %}>{{ value | escape }}</label>
                            {%- endfor -%}
                          </fieldset>
                        {%- else -%}
                          <select name="option{{ option.position }}"
                                  class="single-option-list-type single-option-selector__radio single-option-selector-{{ section.id }} product-form__input select--small js-single-option-selector"
                                  id="SingleOptionSelector-{{ forloop.index0 }}"
                                  data-index="option{{ forloop.index }}">
                            {%- for value in option.values -%}
                              <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>{{ value | escape }}</option>
                            {%- endfor -%}
                          </select>
                        {%- endif -%}
                      </div>
                    {%- endfor -%}
                    </div>
                  {%- endunless -%}

                  <select name="id"
                          id="MainProductSelect-{{ product.id }}"
                          class="product-single__variants no-js product-form__item"
                          data-section-id="{{ section.id }}">

                    {% for variant in product.variants %}
                      {%- liquid
                        assign product_qty = 0

                        if variant.inventory_management == "shopify"
                          if variant.inventory_policy == "continue"
                            assign product_qty = 99999
                          else
                            if variant.inventory_quantity > 0
                              assign product_qty = variant.inventory_quantity
                            else
                              assign product_qty = 0
                            endif
                          endif
                        else
                          assign product_qty = 99999
                        endif
                      -%}

                      <option
                          {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                          {% unless variant.available %}disabled="disabled"{% endunless %}
                          data-sku="{{ variant.sku }}"
                          data-image="{{variant.image | img_url}}"
                          data-inventory-policy="{{ variant.inventory_policy }}"
                          data-inventory-quantity="{{ product_qty }}"
                          data-product-qty="{{ product_qty }}"
                          data-option-1="{{ variant.option1 }}"
                          data-option-2="{{ variant.option2 }}"
                          data-option-3="{{ variant.option3 }}"
                          value="{{ variant.id }}"
                          varPrice ="{{ variant.price | money }}"
                          varCompPrice ="{{ variant.compare_at_price | money }}">
                        {%- if variant.available -%}
                          {{ variant.title }} - {{ variant.price | money_with_currency }}
                        {%- else -%}
                          {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                        {%- endif -%}
                      </option>
                    {% endfor %}
                  </select>

                  {%- liquid
                    assign hide_quantity_box = true

                    if section.settings.quantity_enabled or settings.dbtfy_quantity_breaks or settings.dbtfy_inventory_quantity
                      assign hide_quantity_box = false
                    endif
                  -%}

                  {%- if section.settings.quantity_enabled or settings.dbtfy_quantity_breaks or settings.dbtfy_inventory_quantity -%}
                    <div class="product-single__quantity spacer-bottom" {%- if hide_quantity_box -%}hidden{%- endif -%}>
                      {%- assign quantity_id = 'product-' | append: product.id -%}

                      {%- if section.settings.quantity_enabled or settings.dbtfy_quantity_breaks -%}
                        <label class="inline-label" for="{{ quantity_id }}" {% if section.settings.quantity_enabled == false and settings.dbtfy_quantity_breaks %}hidden {% endif %}>{{ 'products.product.quantity' | t }}</label>
                      {%- endif -%}

                      {%- render "dbtfy-inventory-quantity", product: product -%}

                      {%- if section.settings.quantity_enabled -%}
                       <div class="quantity-product-single-{{product.id}}">
                          {%- render "quantity-selector", type: "product", id: quantity_id -%}
                       </div>
                      {%- elsif settings.dbtfy_quantity_breaks -%}
                       <div class="quantity-product-single-{{product.id}}">
                        <div class="qty-container"></div>
                       </div>
                      {%- endif -%}
                    </div>
                  {%- endif -%}

                  <div class="product-single__add-to-cart">
                    <button type="submit" name="add" id="AddToCart--{{ section.id }}" class="btn btn--primary btn--add-to-cart full"{% unless current_variant.available %} disabled="disabled"{% endunless %}>
                      <span class="btn__text">
                        <span class="{{ settings.icon }} button-cart-icon">{{ settings.icon_cart }}</span>
                        <span class="btn__add-to-cart-text">
                          {%- liquid
                            if current_variant.available
                              echo 'products.product.add_to_cart' | t
                            else
                              echo 'products.product.sold_out' | t
                            endif
                          -%}
                        </span>
                      </span>
                    </button>

                    {%- if settings.enable_payment_button -%}
                      {{ form | payment_button }}
                    {%- endif -%}
                  </div>
                {%- endform -%}

                {% render "dbtfy-back-in-stock", product: product, current_variant: current_variant %}
              {%- endif -%}
            </div>

            {%- render "dbtfy-trust-badge", position: "product_page" -%}

            {%- if settings.dbtfy_product_tabs -%}
              {%- if product_tabs_position == "under_addtocart" -%}
                 <div class="dbtfy-product-tab-box"></div>
              {%- elsif has_description == false and product_tabs_position == "above_description" -%}
                <div class="dbtfy-product-tab-box"></div>
              {%- elsif has_description and product_description_position == "under_addtocart" and product_tabs_position == "above_description" -%}
                <div class="dbtfy-product-tab-box"></div>
              {%- endif -%}
            {%- endif -%}

            {%- if section.settings.show_product_description -%}
              {%- if product_description_position == "under_addtocart" -%}
                {%- unless is_to_split_description -%}
                  <div id="productDescription" class="product-single__description spacer-bottom-none rte spacer-top {{ section.settings.text_alignment }} {{ section.settings.text_alignment_mobile }}">
                    {{ product.description | replace: '<p>[split_description]</p>', '' | replace: '[split_description]', '' }}
                  </div>
                {%- endunless -%}
              {%- endif -%}
            {%- endif -%}

            {%- liquid
              if settings.dbtfy_product_tabs
                if product_tabs_position == "under_description" and product_description_position == "under_addtocart"
                  echo '<div class="dbtfy-product-tab-box"></div>'
                endif
              endif

              render "dbtfy-social-discount", type: "button"

              if section.settings.show_sharing_icons
                render "social-sharing", share_button: "btn btn-square-xsmall", container_class: "spacer-top"
              endif
            -%}

            {%- if section.settings.show_product_tags and product.tags.size > 0 -%}
            <div class="product-tags spacer-top">
              <ul class="inline-list">
                <li class="tag-label">
                  <span class="{{ settings.icon }}" aria-hidden="true">local_offer</span>
                  {{ 'blogs.article.tags' | t }}
                </li>
                {%- for tag in product.tags -%}
                <li>
                  <a class="btn btn-reveal-primary btn--xsmall" href="/collections/all/{{ tag | handleize }}">{{ tag }}</a>
                </li>
                {%- endfor -%}
              </ul>
            </div>
            {%- endif -%}

            {%- if section.settings.show_product_collections and product.collections.size > 0 -%}
            <div class="product-tags spacer-top">
              <ul class="inline-list">
                <li class="tag-label">
                  <span class="{{ settings.icon }}" aria-hidden="true">layers</span>
                  {{ 'collections.general.catalog_title' | t }}
                </li>
                {%- for collection in product.collections -%}
                <li>
                  <a class="btn btn-reveal-primary btn--xsmall" href="{{ collection.url }}">{{ collection.title }}</a>
                </li>
                {%- endfor -%}
              </ul>
            </div>
            {%- endif -%}

            {%- if section.settings.show_full_details -%}
            <div class="spacer-top">
              <a class="product-single__full-details text-link"{% unless emptyState %} href="{{ product.url }}"{% endunless %}>
                {{ 'products.product.full_details' | t }}
                <span class="{{ settings.icon }}" aria-hidden="true">arrow_forward</span>
              </a>
            </div>
            {%- endif -%}

            {%- if template.name != "product" and emptyState == false -%}
              <div class="product-single-reviews-wrapper" hidden>
                {% render 'review-widget', product: product %}
              </div>
            {%- endif -%}
          </div>
        </div>

        <!-- {%- render "dbtfy-sticky-addtocart" with product as product, current_variant: current_variant -%} -->

        {%- render "product-info-json", product: product -%}
      </div>

    </div><!-- /.wrapper -->
  </div><!-- /.box -->
</div><!-- /.product-single -->

{%- if show_info_section -%}
<div class="section-description box {{ section.settings.description_style }} {{ section.settings.text_alignment }} {{ section.settings.text_alignment_mobile }}">
  <div class="wrapper">
    <div class="grid">
      <div class="grid__item{% unless section.settings.description_full %} large--eight-twelfths push--large--two-twelfths{% endunless %}">
        {%- if settings.dbtfy_product_tabs -%}
           {%- if product_tabs_position == "separate_section" or product_tabs_position == "above_description" and product_description_position == "separate_section" -%}
              <div class="dbtfy-product-tab-box"></div>
          {%- endif -%}
        {%- endif -%}

        {%- if section.settings.show_product_description -%}
          {%- if product_description_position == "separate_section" or is_to_split_description -%}
            <div id="productDescription" class="product-single__description rte spacer-bottom-none">
              {%- liquid
                if is_to_split_description
                  assign second_part = product.description | split: '<p>[split_description]</p>' | last

                  unless second_part contains '[split_description]'
                    echo second_part
                  else
                    echo product.description | split: '[split_description]' | last
                  endunless
                else
                  echo product.description | replace: '<p>[split_description]</p>', '' | replace: '[split_description]', ''
                endif
              -%}
            </div>
          {%- endif -%}
        {%- endif -%}


        {%- liquid
        if settings.dbtfy_product_tabs
          if product_tabs_position == "under_description" and product_description_position == "separate_section"
            echo '<div class="dbtfy-product-tab-box"></div>'
          endif
        endif
        -%}
      </div>
    </div>
  </div>
</div>
{%- endif -%}

{%- render "dbtfy-addtocart-animation" -%}

{%- unless emptyState -%}


<div class="sticky_atc">
  <div class="wrapper">
    {%- form 'product', product -%}
      <div class="flex_atc">
        <div class="image-wrapper-sticky_addtocart{% if mobile_display %} small--hide{% endif %}">
          <img class="image-link hide image-empty-sticky_addtocart image-sticky_addtocart" src="">
  
          {%- if product.has_only_default_variant -%}
            {%- assign image = product.media.first.preview_image -%}
  
            {%- if image != blank -%}
              <img class="image-link image-sticky_addtocart image-sticky_addtocart-{{ variant.id }} lazyload" data-src="{{ image | img_url: "65x65", crop: "center" }}">
            {%- else -%}
              {{ "product-1" | placeholder_svg_tag: 'placeholder-svg' }}
            {%- endif -%}
          {%- else -%}
            {%- liquid
              assign first_variant = product.selected_or_first_available_variant
              
              if first_variant.image
                assign image = first_variant.image
              else
                assign image = product.media.first.preview_image
              endif
            -%}
  
            {%- if image != blank -%}
              <img id="sticky_img" class="image-link image-sticky_addtocart lazyload image-sticky_addtocart-{{ first_variant.id }}" data-src="{{ image | img_url: "65x65", crop: "center" }}">
            {%- else -%}
              {{ "product-1" | placeholder_svg_tag: 'placeholder-svg' }}
            {% endif %}
          {%- endif -%}
        </div>
        <div class="overflow-hidden text-wrapper-sticky_addtocart small--hide">
          <h5 class="title-sticky_addtocart text-ellipsis">{{ product.title }}</h5>
          <div class="dbtfy-sticky-price-box text-money flex_price align-center small--align-bottom" data-discount-saved='{{ settings.dbtfy_discount_saved }}'>
            <span class="total-sticky-price{% if settings.dbtfy_sticky_addtocart_position == 'top' and settings.dbtfy_custom_currencies %} tooltip-position-bottom{% endif %}">
              <span id="sticky_price" class="money" style="color:#d40000;">{{ price | money }}</span>
            </span>
  
            <span class="total-sticky-compare-price text-money text-muted text-strike{% if settings.dbtfy_sticky_addtocart_position == 'top' and settings.dbtfy_custom_currencies %} tooltip-position-bottom{% endif %}">
              <span id="sticky_compare_price" class="money">{{ compare_at_price | money }}</span>
            </span>
  
            {%- if settings.dbtfy_discount_saved -%}
              <span class="discount-sticky-price badge small--hide" data-discount-variant="{{ settings.sale_type }}">
                <span class="{{ settings.icon }}">local_offer</span>
                <span>SAVE</span>
                <span id="sticky_save" class="discount-sticky-price-text{% if settings.dbtfy_sticky_addtocart_position == 'top' and settings.dbtfy_custom_currencies %} tooltip-position-bottom{% endif %}"> {{ save_price2 | round }}%</span>
              </span>
            {%- endif -%}
          </div>
        </div>
        <div class="sticky_right">
          <div class="small--flex-fill select-wrapper-sticky_addtocart {% if mobile_display %}small--hide{% endif %} {% if product.has_only_default_variant %}hide{% endif %} hide-empty">
            <select id="sticky-select" class="select--small small--full text-ellipsis select-sticky_addtocart select-max no-js" name="id" {% if product.has_only_default_variant and product_qty == 0 %} data-product-price="{{ product.price }}" data-product-compare-at-price="{{ product.compare_at_price }}"{% endif %}>
              {%- for variant in product.variants -%}
                {%- liquid
                  assign product_qty = 0
    
                  if variant.inventory_management == "shopify"
                    if variant.inventory_policy == "continue"
                      assign product_qty = 99999
                    else
                      if variant.inventory_quantity > 0
                        assign product_qty = variant.inventory_quantity
                      else
                        assign product_qty = 0
                      endif
                    endif
                  else
                    assign product_qty = 99999
                  endif
                -%}
    
                {%- capture option_markup -%}
                  <option
                      {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                      value="{{ variant.id }}"
                      data-image="{{variant.image | img_url}}"
                      data-price="{{ variant.price }}"
                      data-compare-at-price="{% if variant.compare_at_price %}{{ variant.compare_at_price }}{% else %}0{% endif %}"
                      data-product-qty="{{ product_qty }}"
                      data-option-size="{{ variant.options.size }}"
                      {% for option in variant.options %}
                    data-option-{{ forloop.index }}="{{ option }}"
                      {% endfor %}>
                    {{ variant.title | escape }}
                  </option>
                {%- endcapture -%}
    
                {%- if settings.dbtfy_linked_options -%}
                  {%- if product_qty > 0 -%}
                    {{ option_markup }}
                  {%- endif -%}
                {%- else -%}
                  {{ option_markup }}
                {%- endif -%}
              {%- endfor -%}
            </select>
          </div>
          {%- if section.settings.quantity_enabled -%}
              <div class="quantity-sticky_addtocart small--hide">
                {%- assign quantity_id = 'sticky-atc-' | append: product.id -%}
                {%- render 'quantity-selector', type: 'product', outlineClass: "input-sticky_addtocart", id: quantity_id -%}
              </div>
            {%- endif -%}
            <div class="text-right button-wrapper-sticky_addtocart {% if mobile_display or product.has_only_default_variant %}small--flex-fill{% endif %}">
              <button type="submit" class="btn btn--primary small--full text-ellipsis btn--sticky_addtocart js-add-to-cart-button{% if settings.dbtfy_sticky_addtocart_animation %} btn--addtocart_animation{% endif %}" {% unless current_variant.available %} disabled="disabled"{% endunless %}>
                <span class="btn__text">
                  <span class="{{ settings.icon }}">{{ settings.icon_cart }}</span>
                  <span class="btn__add-to-cart-text btn-text-sticky_addtocart">
                    {%- if current_variant.available -%}
                      {{ "products.product.add_to_cart" | t }}
                    {%- else -%}
                      {{ "products.product.sold_out" | t }}
                    {%- endif -%}
                  </span>
                </span>
              </button>
            </div>
        </div>  
      </div>
    {%- endform -%}
  </div>
</div>

<style>
  #sticky_img{
    width:65px; 
    height:65px; 
    object-fit:cover; 
    min-width: 65px; 
    min-height: 65px;
  }
  .sticky_atc {
    position:fixed;
    bottom:0;
    left: 0;
    overflow-x: hidden;
    overflow-y: hidden;
    width: 100%;
    margin:auto;
    z-index: 999;
    background: #fff;
    padding:.5rem;
    box-shadow: 0px -3px 3px #888;
  }
  .flex_atc, .sticky_right{
    display:flex;
    align-items: center;
    gap:1rem;
  }
  .flex_price {
    display:flex;
    gap:.5rem;
  }
  .sticky_right{
    margin-left: auto;
  }
  @media (max-width: 768px) { 
    .sticky_right{
      margin-left: 0;
      flex-grow: 1;
    }
  }
  @media (max-width: 576px){
    #sticky_img {
      width: 48px;
      height: 48px;
      min-width: 48px !important;
      min-height: 48px !important;
    }
    .btn--sticky_addtocart {
      padding: 6px 10px;
    }
  }
</style>

<script type="application/json" id="ProductJson-{{ section.id }}" class="mainProductJson">
{
  "available": {{ product.available | json }},
  "collections": {{ product.collections | json }},
  "compare_at_price": {{ product.compare_at_price | json }},
  "compare_at_price_max": {{ product.compare_at_price_max | json }},
  "compare_at_price_min": {{ product.compare_at_price_min | json }},
  "compare_at_price_varies": {{ product.compare_at_price_varies | json }},
  "content": {{ product.content | json }},
  "created_at": {{ product.created_at | json }},
  "description": {{ product.description | json }},
  "featured_image": {{ product.featured_image | json }},
  "first_available_variant_compare_at_price": {{ product.selected_or_first_available_variant.compare_at_price | json }},
  "handle": {{ product.handle | json }},
  "id": {{ product.id | json }},
  "images": {{ product.images | json }},
  "media": {{ product.media | json }},
  "options": {{ product.options | json }},
  "options_with_values": {
    {% for product_option in product.options_with_values %}
      "option{{ product_option.position }}": {{ product_option.values | json }}{% unless forloop.last %},{% endunless %}
    {% endfor %}
  },
  "price": {{ product.price | json }},
  "price_max": {{ product.price_max | json }},
  "price_min": {{ product.price_min | json }},
  "price_varies": {{ product.price_varies | json }},
  "published_at": {{ product.published_at | json }},
  "requires_selling_plan": {{ product.requires_selling_plan | json }},
  "selling_plan_groups": {{ product.selling_plan_groups | json }},
  "tags": {{ product.tags | json }},
  "title": {{ product.title | json }},
  "type": {{ product.type | json }},
  "variants": {{ product.variants | json }},
  "vendor": {{ product.vendor | json }},
  "has_only_default_variant": {{ product.has_only_default_variant | json }}
}
</script>

<script type="application/json" id="ModelJson-{{ section.id }}">
{{ product.media | where: 'media_type', 'model' | json }}
</script>

<script>
  async function getProdInfo() {
     const samp = {{ product.url | append: '.js' | json }};
     const prod_url =  JSON.stringify(samp).slice(2,-1);
     const res = await fetch (window.Shopify.routes.root + prod_url );
     const profile = await res.json();
    //  const show = ({{ product.selected_or_first_available_variant | json }});
    //  console.log(show);
    // console.log(profile.variants);
    const var_length = profile.variants.length;
    

    const tag = document.getElementsByTagName('fieldset');
    const tag2 = document.getElementById('sticky-select');

    const selectID = {{ product.id | json}}

    for(let i = 0; i<tag.length; i++) {
      tag[i].addEventListener('change',
        function(e) {
          const selected = ($('#MainProductSelect-'+JSON.stringify(selectID)).val());
          const select = document.getElementById('sticky-select');
          select.value = selected;
          for(let a = 0; a<var_length; a++)
          {
            if(profile.variants[a].id == parseInt(selected)){
              document.getElementById('sticky_img').setAttribute('src', profile.variants[a].featured_image.src);
              const main_price = document.getElementById('ProductPrice').textContent;
              const main_compare_price = document.getElementById('ComparePrice').textContent;
              document.getElementById('sticky_price').textContent = main_price;
              document.getElementById('sticky_compare_price').textContent = main_compare_price;
              const var_price = profile.variants[a].price;
              const var_comp_price = profile.variants[a].compare_at_price;
              const result_price = (var_price/var_comp_price)*100;
              const final_result_price = 100 - result_price;
              document.getElementById('getme').textContent = final_result_price + '%';
              document.getElementById('sticky_save').textContent = final_result_price +'%';
            }
          } 
        }
      )
    }

    tag2.addEventListener('change',
      function(e) {
          const variant_id = document.getElementById('sticky-select');
          const variant_id_child = variant_id.children;
          for(let i = 0; i<variant_id_child.length; i++){
            let selected_checker = false;
            if(variant_id_child[i].getAttribute('value') == variant_id.value ) {
              const data_option_size = variant_id_child[i].getAttribute('data-option-size');
              for(let y = 0; y<data_option_size; y++){
                const oprion_value = variant_id_child[i].getAttribute('data-option-'+(y+1));
                const counter = document.getElementsByClassName('single-option-selector__radio js-single-option-selector').length;
                for(let z = 0; z<counter; z++){
                  if(document.getElementsByClassName('single-option-selector__radio js-single-option-selector')[z].getAttribute('value') == oprion_value ){
                    document.getElementsByClassName('single-option-selector__radio js-single-option-selector')[z].checked = true;
                  }
                } 
              }
              document.getElementById('sticky_img').setAttribute('src', profile.variants[i].featured_image.src);
              const mainSelect = document.getElementById('MainProductSelect-{{ product.id }}');
              for(let b = 0; b<variant_id_child.length; b++){
                mainSelect.children[b].removeAttribute("selected");
                if(mainSelect.children[b].value == variant_id.value){
                  mainSelect.children[b].setAttribute('selected', 'selected');
                  const main_var_price = mainSelect.children[b];
                  document.getElementById('sticky_price').textContent = main_var_price.getAttribute('varprice');
                  const main_var_compare_price = mainSelect.children[b];
                  document.getElementById('sticky_compare_price').textContent = main_var_price.getAttribute('varcompprice');
                  document.getElementById('ProductPrice').textContent =  main_var_price.getAttribute('varprice');
                  document.getElementById('ComparePrice').textContent =  main_var_price.getAttribute('varcompprice');
                  const var_price2 = profile.variants[b].price;
                  const var_comp_price2 = profile.variants[b].compare_at_price;
                  const result_price2 = (var_price2/var_comp_price2)*100;
                  const final_result_price2 = 100 - result_price2;
                  document.getElementById('getme').textContent = final_result_price2 + '%';
                  document.getElementById('sticky_save').textContent = final_result_price2 +'%';
                }
              }            
            }
          }
      }
    ) 
  }
  getProdInfo();

  $(document).ready(function () {
  	
    const heroHeader = document.querySelector('.section-description');
  	const moveBtn = (e) => {
  		const heroBtn = document.querySelector('.sticky_atc');
        if(!e[0].isIntersecting){
          $('.sticky_atc').hide();
        }
        if(e[0].isIntersecting){
          $('.sticky_atc').show();
        }
    }
    const moveBtnIntersectionObs = new IntersectionObserver(moveBtn);
  	moveBtnIntersectionObs.observe(heroHeader);
  });

</script>

{%- endunless -%}